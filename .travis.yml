language: php

php:
#  - 5.3
#  - 5.4
  - 5.5

env:
  - DB=mysql TYPO3=thesis-develop INTRODUCTION=master INTEGRATION=master COVERAGE=0
#   - DB=mysqli TYPO3=thesis-develop INTEGRATION=master COVERAGE=0
#  - DB=sqlite TYPO3=master INTEGRATION=master COVERAGE=1
  - DB=pgsql TYPO3=thesis-develop INTRODUCTION=master INTEGRATION=master COVERAGE=0

services:
  - memcached

notifications:
  email:
    - blueduck@gmx.net

before_script:
  # Get latest version of git cause of travis issues (https://github.com/travis-ci/travis-ci/issues/1710)
  - sudo apt-get update && sudo apt-get install git
  - sudo apt-get install parallel

  # Get the latest version of scrutinizer
  #  - wget https://scrutinizer-ci.com/ocular.phar

  # Install build dependencies
  - composer install
  - cd ..

  # Cloning the test helper repository
  - git clone --single-branch --branch $INTEGRATION --depth 1 git://github.com/Konafets/TYPO3-Travis-Integration.git build-environment
  - source build-environment/install-helper.sh
  - if [[ "$TRAVIS_PHP_VERSION" != "5.5" ]]; then installPhpModule igbinary; fi
  - installPhpModule -y memcache
  - installPhpModule redis
  - if [[ "$TRAVIS_PHP_VERSION" == "5.3" ]]; then installPhpModule -y apc; fi

  # Install rudimentary TYPO3
  - git clone --single-branch --branch $TYPO3 --depth 1 git://github.com/Konafets/TYPO3CMS-DoctrineDBAL core
  - git clone --single-branch --branch $INTRODUCTION --depth 1 https://git.typo3.org/TYPO3CMS/Distributions/Introduction.git build-environment/Introduction
  - mv core/typo3 .
  - mv build-environment/typo3conf .
  - git clone --single-branch --branch master --depth 1 https://git.typo3.org/TYPO3CMS/Extensions/phpunit.git typo3conf/ext/phpunit/
  - ls -lah
  - ls -lah doctrine-dbal/vendor
  - mkdir Packages
  - cp -r doctrine-dbal/vendor Packages
  - mv Packages/vendor Packages/Libraries
  - ls -lah Packages/Libraries/
  - mv doctrine-dbal typo3conf/ext/doctrine_dbal
  - mkdir fileadmin
  - mkdir uploads

  # Testing with mysql
  - >
    if [[ "$DB" == "mysql" ]]; then
        cp typo3conf/LocalConfiguration.$DB.php typo3conf/LocalConfiguration.php
        mysql -e "DROP DATABASE IF EXISTS typo3_test;" -uroot
        mysql -e "CREATE DATABASE IF NOT EXISTS typo3_test;" -uroot
        mysql -uroot typo3_test < build-environment/Introduction/typo3conf/ext/introduction/Resources/Private/Subpackages/Introduction/Database/introduction.sql
        mysql -uroot typo3_test < build-environment/dbimport/cli_users.sql
        mysql -uroot typo3_test < build-environment/dbimport/cache_tables.sql
    fi

  # Testing with mysqli
  - if [[ "$DB" == "mysqli" ]]; then mysql -e "DROP DATABASE IF EXISTS typo3_test;" -uroot; fi
  - if [[ "$DB" == "mysqli" ]]; then mysql -e "CREATE DATABASE IF NOT EXISTS typo3_test;" -uroot; fi
  - if [[ "$DB" == "mysqli" ]]; then mysql -uroot typo3_test < build-environment/Introduction/typo3conf/ext/introduction/Resources/Subpackages/Introduction/Database/introduction.sql; fi
  - if [[ "$DB" == "mysqli" ]]; then mysql -uroot typo3_test < build-environment/dbimport/cache_tables.sql; fi

  # Testing with sqlite
  - if [[ "$DB" == "sqlite" ]]; then mysql -e "DROP DATABASE IF EXISTS typo3_test;" -uroot; fi
  - if [[ "$DB" == "sqlite" ]]; then mysql -e "CREATE DATABASE IF NOT EXISTS typo3_test;" -uroot; fi
  - if [[ "$DB" == "sqlite" ]]; then mysql -uroot typo3_test < build-environment/Introduction/typo3conf/ext/introduction/Resources/Subpackages/Introduction/Database/introduction.sql; fi
  - if [[ "$DB" == "sqlite" ]]; then mysql -uroot typo3_test < build-environment/dbimport/cache_tables.sql; fi

  # Testing with pgsql
  - >
    if [[ "$DB" == "pgsql" ]]; then
        mysql -e "DROP DATABASE IF EXISTS typo3_test;" -uroot
        mysql -e "CREATE DATABASE IF NOT EXISTS typo3_test;" -uroot
        mysql -uroot typo3_test < build-environment/Introduction/typo3conf/ext/introduction/Resources/Private/Subpackages/Introduction/Database/introduction.sql

        touch build-environment/dbimport/postgres.sql
        echo 'SET standard_conforming_strings = \'off\';' >> build-environment/dbimport/postgres.sql
        echo 'SET backslash_quote = \'on\';' >> build-environment/dbimport/postgres.sql
        mysqldump -uroot --compatible=postgresql typo3_test >> build-environment/dbimport/postgres.sql

        cp typo3conf/LocalConfiguration.$DB.php typo3conf/LocalConfiguration.php
        psql -U postgres -c "DROP DATABASE IF EXISTS typo3_test;"
        psql -U postgres -c "CREATE DATABASE typo3_test;"
        psql -U postgres typo3_test < build-environment/dbimport/postgres.sql
# psql -U postgres typo3_test < build-environment/dbimport/cli_users.sql
#psql -U postgres typo3_test < build-environment/dbimport/cache_tables.sql
    fi

script:
  - export TYPO3_PATH_WEB=$PWD
  - if [[ "$COVERAGE" == "1" ]]; then phpunit --coverage-clover coverage.clover --bootstrap $PWD/typo3/sysext/core/Build/UnitTestsBootstrap.php $PWD/typo3conf/ext/doctrine_dbal/Tests; fi
  - if [[ "$COVERAGE" == "0" ]]; then phpunit --bootstrap $PWD/typo3/sysext/core/Build/UnitTestsBootstrap.php $PWD/typo3conf/ext/doctrine_dbal/Tests; fi
#  - if [[ "$COVERAGE" == "1" ]]; then php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi
